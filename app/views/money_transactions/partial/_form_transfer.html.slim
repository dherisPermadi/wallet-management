= form_for @money_transaction, html: { autocomplete: 'off' } do |f|
  = render partial: 'shared/form_error_messages', locals: { selector: @money_transaction }
  .col-md-6
    .card.bg-color-info
      .card-body
        h3.card-title
          = "Transfer"
        - if current_user.user_type.eql?('admin')
          .row
            .col-md-4
              = f.hidden_field :transaction_type, value: 'transfer'
              .form-group
                = f.label 'Wallet Owner Type', class: 'form-label'
                .selectgroup.w-100
                  - ['User', 'Team'].each do |transactionable_type|
                    label.selectgroup-item
                      = f.radio_button :transactionable_type, transactionable_type, checked: (transactionable_type == 'User' || transactionable_type == @money_transaction.transactionable_type),
                        class: 'selectgroup-input', onchange: 'displayWalletableCollection(this.value)'
                      span.selectgroup-button = transactionable_type
            .col-md-4
              .form-group
                = f.label 'Wallet Owner', class: 'form-label'
                = f.hidden_field :transactionable_id, class: 'transactionable-id'
                = f.collection_select :user_id, User.order(:name), :id, :name, {}, {class: 'form-control', onchange: 'updateTransactionableId(this.value)'}
                = f.collection_select :team_id, Team.order(:name), :id, :name, {}, {class: 'form-control', onchange: 'updateTransactionableId(this.value)'}
            .col-md-4
              .form-group
                = f.label 'Amount', class: 'form-label'
                = f.text_field :amount, class: 'form-control'
          .row
            .col-md-4
              .form-group
                = f.label 'Wallet Receiver Type', class: 'form-label'
                .selectgroup.w-100
                  - ['User', 'Team'].each do |targetable_type|
                    label.selectgroup-item
                      = f.radio_button :targetable_type, targetable_type, checked: (targetable_type == 'User' || targetable_type == @money_transaction.targetable_type),
                        class: 'selectgroup-input', onchange: 'displayTargetableCollection(this.value)'
                      span.selectgroup-button = targetable_type
            .col-md-4
              .form-group
                = f.label 'Wallet Receiver', class: 'form-label'
                = f.hidden_field :targetable_id, class: 'targetable-id'
                = f.collection_select :target_user_id, User.order(:name), :id, :name, {}, {class: 'form-control', onchange: 'updateTargetableId(this.value)'}
                = f.collection_select :target_team_id, Team.order(:name), :id, :name, {}, {class: 'form-control', onchange: 'updateTargetableId(this.value)'}
        - else
          .row
            .col-md-4
              .form-group
                = f.label 'My Balance', class: 'form-label'
                = text_field_tag 'my_balance', nominal_format(current_user.wallet.balance), class: 'form-control', disabled: true
          .row
            .col-md-4
              .form-group
                = f.hidden_field :transaction_type, value: 'transfer'
                = f.hidden_field :transactionable_type, value: 'User'
                = f.hidden_field :transactionable_id, value: current_user.id
                = f.label 'Wallet Receiver Type', class: 'form-label'
                .selectgroup.w-100
                  - ['User', 'Team'].each do |targetable_type|
                    label.selectgroup-item
                      = f.radio_button :targetable_type, targetable_type, checked: (targetable_type == 'User' || targetable_type == @money_transaction.targetable_type),
                        class: 'selectgroup-input', onchange: 'displayTargetableCollection(this.value)'
                      span.selectgroup-button = targetable_type
            .col-md-4
              .form-group
                = f.label 'Wallet Receiver', class: 'form-label'
                = f.hidden_field :targetable_id, class: 'targetable-id'
                = f.collection_select :target_user_id, User.where.not(id: current_user.id).order(:name), :id, :name, {},
                  {class: 'form-control', onchange: 'updateTargetableId(this.value)'}
                = f.collection_select :target_team_id, Team.order(:name), :id, :name, {}, {class: 'form-control', onchange: 'updateTargetableId(this.value)'}
            .col-md-4
              .form-group
                = f.label 'Amount', class: 'form-label'
                = f.text_field :amount, class: 'form-control'
      .card-footer
        .d-flex
          = link_to "Back", current_user.user_type.eql?('admin') ? money_transactions_path : wallet_path(id: current_user.wallet.id), class: 'btn btn-secondary'
          = f.submit "Submit", class: 'btn btn-primary ml-auto'

javascript:
  if ("#{@money_transaction.transactionable_id.blank?}" == 'true') {
    updateTransactionableId($("#money_transaction_user_id option:first").val());
    $('#money_transaction_team_id').hide();
  }
  displayWalletableCollection("#{@money_transaction.transactionable_type}");

  function updateTransactionableId(id) {
    $('.transactionable-id').val(id);
  }

  function displayWalletableCollection(type) {
    if (type == 'Team') {
      if ("#{@money_transaction.transactionable_id.blank?}" == 'true') {
        updateTransactionableId($("#money_transaction_team_id option:first").val());
      }
      $('#money_transaction_user_id').hide();
      $('#money_transaction_team_id').show();
    } else {
      if ("#{@money_transaction.transactionable_id.blank?}" == 'true') {
        updateTransactionableId($("#money_transaction_user_id option:first").val());
      }
      $('#money_transaction_user_id').show();
      $('#money_transaction_team_id').hide();
    }
  }

  if ("#{@money_transaction.targetable_id.blank?}" == 'true') {
    updateTargetableId($("#money_transaction_target_user_id option:first").val());
    $('#money_transaction_target_team_id').hide();
  }
  displayTargetableCollection("#{@money_transaction.targetable_type}");

  function updateTargetableId(id) {
    $('.targetable-id').val(id);
  }

  function displayTargetableCollection(type) {
    if (type == 'Team') {
      if ("#{@money_transaction.targetable_id.blank?}" == 'true') {
        updateTargetableId($("#money_transaction_target_team_id option:first").val());
      }
      $('#money_transaction_target_user_id').hide();
      $('#money_transaction_target_team_id').show();
    } else {
      if ("#{@money_transaction.transactionable_id.blank?}" == 'true') {
        updateTargetableId($("#money_transaction_target_user_id option:first").val());
      }
      $('#money_transaction_target_user_id').show();
      $('#money_transaction_target_team_id').hide();
    }
  }